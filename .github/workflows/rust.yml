name: cr8s CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  setup:
    name: 📆 Shared Setup
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: 👁️ Inspect version
        id: get_version
        run: |
          echo "version=$(awk -F '\"' '/^version =/ { print \$2 }' Cargo.toml)" >> "$GITHUB_OUTPUT"

      - name: 🚧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:latest
          buildkitd-flags: --debug
          driver: docker-container
          name: cr8s-builder
          use: true

      - name: 📁 Setup Docker buildx cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

  lint:
    name: ✨ Full Lint (fmt, clippy, audit, outdated, deny)
    runs-on: ubuntu-latest
    needs: setup
    env:
      CI: true
      CR8S_VERSION: ${{ needs.setup.outputs.version }}
    steps:
      - name: 🔧 Run full lint via rust-dev container
        run: |
          ./scripts/dev/build-images.sh --full-lint

  build:
    name: 📆 Build & Push Containers
    runs-on: ubuntu-latest
    needs: [setup, lint]
    env:
      DATABASE_HOST: 127.0.0.1
      REDIS_HOST: 127.0.0.1
      CI: true
      CR8S_VERSION: ${{ needs.setup.outputs.version }}
    steps:
      - name: 🚀 Build and push containers
        run: |
          ./scripts/dev/build-images.sh --push --diesel-migrations
