# syntax=docker/dockerfile:1.4
# Use BuildKit-enabled Docker

# Dockerfile for cr8s runtime containers

########################
# 🔧 Build stage
########################
FROM ghcr.io/johnbasrai/cr8s/rust-dev:v1.83.1 AS builder

ARG DEBUG=0
ARG CI=false
ARG DATABASE_HOST=localhost
ARG REDIS_HOST=localhost

ENV DATABASE_URL=postgres://postgres:secret@${DATABASE_HOST}:5432/cr8s
ENV REDIS_URL=redis://${REDIS_HOST}:6379
ENV ROCKET_LOG=debug

RUN /bin/sh -c "echo \"🚨 REDIS_URL: >>${REDIS_URL}<< ...\" >&2"
RUN if [ "$CI" = "true" ]; then echo "Running in CI"; fi

WORKDIR /app

# ✅ Optimize build caching
COPY Cargo.toml Cargo.lock ./
COPY src/bin ./src/bin
USER root
RUN cargo fetch

# ✅ Copy rest of app after fetching dependencies
COPY . .

RUN sed Rocket.toml.template \
    -e "s|%{REDIS_HOST}%|${REDIS_HOST}|g" \
    -e "s|%{DATABASE_HOST}%|${DATABASE_HOST}|g" > /app/Rocket.toml

# Validate sed command worked
RUN grep '%{' Rocket.toml && \
    (echo "❌ Substitution incomplete!" && exit 1) || echo "✅ All variables substituted"

RUN /bin/sh -c 'echo "🔨 STAGE: Run Diesel migrations..." >&2'
RUN if [ "${DEBUG:-0}" = "1" ]; then pwd; ls -la diesel.toml; fi
RUN diesel setup
RUN diesel migration run
RUN rustfmt src/schema.rs # This is auto generated by diesel migration
                          # but is not formatted correctly

## TODO Change 'cargo check' to 'cargo sqlx', don't do both
RUN /bin/sh -c 'echo "👀 Lint checks (format/clippy/audio/outdated)..." >&2'
RUN cargo fmt --check
RUN cargo clippy --all-targets --all-features -- -D warnings
RUN cargo audit || cargo outdated || true

RUN /bin/sh -c 'echo "🛠️ Build backend server and cli binaries..." >&2'
RUN cargo build --release --bin server
RUN cargo build --release --bin cli

RUN /bin/sh -c 'echo "🔨 Bootstrap seed DB for test run..." >&2'
RUN target/release/cli roles init-defaults # Use the cli just built.

RUN /bin/sh -c 'echo "🚀⏳ Launch backend server and run unit tests..." >&2'
RUN chmod +x scripts/start-backend.sh && scripts/start-backend.sh && \
    cargo test --release --all-targets --all-features || \
    pkill server || true

# Cleanup stuff 🧹
RUN pkill target/release/server || true

RUN /bin/sh -c 'echo "🧪 Running unit-tests..." >&2'
RUN strip target/release/server target/release/cli

########################
# 🚀 Server image
########################
FROM ghcr.io/johnbasrai/cr8s/rust-runtime:v0.3.1 AS runtime-server

RUN /bin/sh -c 'echo "🔨 Building runtime SERVER container" >&2'

WORKDIR /app

COPY .Rocket.toml.template /app/Rocket.toml

RUN sed -ie "s|%{REDIS_HOST}%|${REDIS_HOST}|g" \
         -e "s|%{DATABASE_HOST}%|${DATABASE_HOST}|g" /app/Rocket.toml
RUN cat /app/Rocket.toml && false
COPY --from=builder /app/target/release/server /app/server

USER appuser

ENTRYPOINT ["./server"]

########################
# 🛠 CLI image
########################
FROM ghcr.io/johnbasrai/cr8s/rust-runtime:v0.3.1 AS runtime-cli

RUN /bin/sh -c 'echo "🔨 Building runtime CLI container" >&2'

WORKDIR /app
COPY --from=builder /app/target/release/cli /app/cli

USER appuser

ENTRYPOINT ["./cli"]
